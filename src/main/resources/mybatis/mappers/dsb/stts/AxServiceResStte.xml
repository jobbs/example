<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ncis.sql.dsb.stts.res.AxServiceResStte">

	<resultMap type="ncis.dsb.stts.res.vo.AxServiceResStteVo" id="resultAxServiceResStteVo">
		<result property="regionNm" column="REGION_NM"/>
		<result property="zoneNm" column="ZONE_NM"/>
		<result property="netNm" column="NET_NM"/>
		<result property="rsrcPoolNm" column="RSRC_POOL_NM"/>
		<result property="servcNm" column="SERVC_NM"/>
		<result property="servcSeq" column="SERVC_SEQ"/>
		<result property="podQty" column="POD_QTY"/>
		<result property="cpu" column="CPU_ASGN_CAPA"/>
		<result property="cpuRt" column="AVG_CPU_USE_RT"/>
		<result property="mem" column="MEM_TOT_CAPA"/>
		<result property="memRt" column="AVG_MEM_USE_RT"/>
		<result property="strg" column="STRG_TOT_CAPA"/>
		<result property="netwkIn" column="AVG_IN_TRFIC"/>
		<result property="netwkOut" column="AVG_OUT_TRFIC"/>

	</resultMap>


	<sql id="search">
	           <choose>
					<when test='"DD".equals(searchTrmCd)'>
							AND A.COLCT_DT = REPLACE(#{date},'-','')
					</when>
					<when test='"DI".equals(searchTrmCd)'>
							AND A.COLCT_DT BETWEEN REPLACE(#{strtDt},'-','') AND REPLACE( #{endDt},'-','')
					</when>
					<when test='"MM".equals(searchTrmCd)'>
						AND A.COLCT_YM = #{year}||#{searchMmCd}
					</when>
					<when test='"QQ".equals(searchTrmCd) and "01".equals(searchQqCd)'>
						AND A.COLCT_YM between #{year}||'01' AND #{year}||'03'
					</when>
					<when test='"QQ".equals(searchTrmCd) and "02".equals(searchQqCd)'>
					    AND A.COLCT_YM between #{year}||'04' AND #{year}||'06'
					</when>
					<when test='"QQ".equals(searchTrmCd) and "03".equals(searchQqCd)'>
					    AND A.COLCT_YM between #{year}||'07' AND #{year}||'09'
					</when>
					<when test='"QQ".equals(searchTrmCd) and "04".equals(searchQqCd)'>
					    AND A.COLCT_YM between #{year}||'10' AND #{year}||'12'
					</when>
					<when test='"HH".equals(searchTrmCd) and "01".equals(searchHhCd) '>
					     AND A.COLCT_YM between #{year}||'01' AND #{year}||'06'
					</when>
					<when test='"HH".equals(searchTrmCd) and "02".equals(searchHhCd) '>
					      AND A.COLCT_YM between #{year}||'07' AND #{year}||'12'
					</when>
					<when test='"YY".equals(searchTrmCd)'>
					      AND A.COLCT_YM between #{year}||'01' AND #{year}||'12'
					</when>
				</choose>
				<if test='regionId !=null and !"".equals(regionId)'>
					AND B.REGION_ID = #{regionId}
				</if>
				<if test='zoneId !=null and !"".equals(zoneId)'>
					AND A.ZONE_ID = #{zoneId}
				</if>
				<if test='netId !=null and !"".equals(netId)'>
					AND A.NET_ID IN (SELECT NET_ID FROM RC_NET WHERE NET_CL_CD = #{netId})
				</if>
				<if test='rsrcPoolId !=null and !"".equals(rsrcPoolId)'>
					AND A.RSRC_POOL_ID = #{rsrcPoolId}
				</if>



	</sql>


	<select id="selectAxServiceResStteList" resultMap="resultAxServiceResStteVo">
		/* ncis.sql.dsb.stts.res.AxServiceResStte.selectAxServiceResStteList */

			   SELECT REGION_NM,
					  ZONE_NM,
					  NET_NM,
					  RSRC_POOL_NM,
					  SERVC_NM,
					  SERVC.SERVC_SEQ,
					  SERVC.POD_QTY,
					  SERVC.CPU_ASGN_CAPA,
					  SERVC.AVG_CPU_USE_RT,
					  SERVC.MEM_TOT_CAPA MEM_TOT_CAPA,
					  SERVC.AVG_MEM_USE_RT,
					  SERVC.STRG_TOT_CAPA STRG_TOT_CAPA,
					  SERVC.AVG_IN_TRFIC,
					  SERVC.AVG_OUT_TRFIC
			    FROM
			     (SELECT REGION_ID,
			             ZONE_ID,
			             NET_ID,
			             RSRC_POOL_ID,
			             SERVC_SEQ,
			             SUM(LAST_POD_QTY) POD_QTY,
			             ROUND(SUM(CPU_ASGN_CAPA)/1000,2) CPU_ASGN_CAPA,
			             ROUND(AVG(AVG_CPU_USE_RT),2) AVG_CPU_USE_RT,
			             ROUND(SUM(MEM_TOT_CAPA)/1024/1024/1024,2) MEM_TOT_CAPA,
			             ROUND(AVG(AVG_MEM_USE_RT),2) AVG_MEM_USE_RT,
			             ROUND(SUM(STRG_TOT_CAPA)/1024/1024/1024,2) STRG_TOT_CAPA,
			             ROUND(AVG(AVG_IN_TRFIC)/1024,2) AVG_IN_TRFIC,
			             ROUND(AVG(AVG_OUT_TRFIC)/1024,2) AVG_OUT_TRFIC
		            FROM
		                (SELECT A.REGION_ID,
					       		A.ZONE_ID,
					       		A.NET_ID,
					       		A.RSRC_POOL_ID,
					       		A.SERVC_SEQ,
					       		MAX(A.LAST_POD_QTY) LAST_POD_QTY,
								MAX(A.CPU_ASGN_CAPA) CPU_ASGN_CAPA,
				               	AVG(A.AVG_CPU_USE_RT) AVG_CPU_USE_RT,
				               	MAX(A.MEM_TOT_CAPA) MEM_TOT_CAPA,
				               	AVG(A.AVG_MEM_USE_RT) AVG_MEM_USE_RT,
				               	MAX(A.STRG_TOT_CAPA) STRG_TOT_CAPA,
				               	AVG(A.AVG_IN_TRFIC) AVG_IN_TRFIC,
				               	AVG(A.AVG_OUT_TRFIC) AVG_OUT_TRFIC

					           FROM
						              (SELECT <choose>
													<when test='"DD".equals(searchTrmCd) or "DI".equals(searchTrmCd) '>
														A.COLCT_DT,
													</when>
													<otherwise>
														A.COLCT_YM,
													</otherwise>
												</choose>
							                  B.REGION_ID,
							                  A.ZONE_ID,
											  A.NET_ID,
											  A.RSRC_POOL_ID,
											  A.SERVC_SEQ,
											  FIRST_VALUE(A.LAST_POD_QTY) OVER (PARTITION BY A.SERVC_SEQ ORDER BY
												<choose>
													<when test='"DD".equals(searchTrmCd) or "DI".equals(searchTrmCd) '>
														A.COLCT_DT
													</when>
													<otherwise>
														A.COLCT_YM
													</otherwise>
												</choose> DESC) LAST_POD_QTY,
												FIRST_VALUE(A.CPU_ASGN_CAPA) OVER (PARTITION BY A.SERVC_SEQ ORDER BY
													<choose>
														<when test='"DD".equals(searchTrmCd) or "DI".equals(searchTrmCd) '>
															A.COLCT_DT
														</when>
														<otherwise>
															A.COLCT_YM
														</otherwise>
													</choose>DESC) CPU_ASGN_CAPA,
						               			A.AVG_CPU_USE_RT,
						               			FIRST_VALUE(A.MEM_TOT_CAPA) OVER (PARTITION BY A.SERVC_SEQ ORDER BY
												<choose>
													<when test='"DD".equals(searchTrmCd) or "DI".equals(searchTrmCd) '>
														A.COLCT_DT
													</when>
													<otherwise>
														A.COLCT_YM
													</otherwise>
												</choose> DESC) MEM_TOT_CAPA,
						               			A.AVG_MEM_USE_RT,
						               			FIRST_VALUE(A.STRG_TOT_CAPA) OVER (PARTITION BY A.SERVC_SEQ ORDER BY
						               			<choose>
													<when test='"DD".equals(searchTrmCd) or "DI".equals(searchTrmCd) '>
														A.COLCT_DT
													</when>
													<otherwise>
														A.COLCT_YM
													</otherwise>
												</choose> DESC) STRG_TOT_CAPA,
						               		A.AVG_IN_TRFIC,
						               		A.AVG_OUT_TRFIC

							              FROM
							              <choose>
											 <when test='"DD".equals(searchTrmCd) or "DI".equals(searchTrmCd) '>
								                 ST_RX_SERVC_SUM_1DD A
											 </when>
										   	<otherwise>
										         ST_RX_SERVC_SUM_1MM A
											</otherwise>
										  </choose>
										   LEFT JOIN RC_RSRC_POOL B ON A.RSRC_POOL_ID = B.RSRC_POOL_ID

							          where 1=1
							                <include refid="search"/>
							    )A
							      GROUP BY
						                  A.REGION_ID,
						                  A.ZONE_ID,
								   		  A.NET_ID,
									      A.RSRC_POOL_ID,
									      A.SERVC_SEQ
					       ) A
		           GROUP BY REGION_ID,
						    ZONE_ID,
						    NET_ID,
						    RSRC_POOL_ID,
						    SERVC_SEQ

		  ) SERVC LEFT JOIN RC_RSRC_POOL B ON SERVC.RSRC_POOL_ID = B.RSRC_POOL_ID
		          LEFT JOIN RC_REGION C ON SERVC.REGION_ID = C.REGION_ID
		          LEFT JOIN RC_ZONE D ON SERVC.ZONE_ID = D.ZONE_ID
		          LEFT JOIN RC_NET E ON SERVC.NET_ID = E.NET_ID
		          LEFT JOIN RX_SERVC F ON SERVC.SERVC_SEQ = F.SERVC_SEQ
		 WHERE SERVC.POD_QTY > 0
	</select>



	<select id="selectAxServiceResSttePodList" resultType="java.util.Map">
		/*ncis.sql.dsb.stts.res.AxServiceResStte.selectAxServiceResSttePodList*/
			SELECT DISTINCT A.POD_ID::TEXT,
			       D.POD_NM

		 	FROM
			<choose>
				<when test='"MI".equals(colctCd)'>
					ST_RX_POD_SUM_10MI A
				</when>
				<when test='"HH".equals(colctCd)'>
					ST_RX_POD_SUM_1HH A
				</when>
				<when test='"DD".equals(colctCd)'>
					ST_RX_POD_SUM_1DD A
				</when>
				<when test='"MM".equals(colctCd)'>
					ST_RX_POD_SUM_1MM A
				</when>
			</choose>

            LEFT JOIN RX_SERVC_POD D ON A.SERVC_SEQ = D.SERVC_SEQ AND A.POD_ID = D.POD_ID

			WHERE 1=1
			AND A.SERVC_SEQ = #{servcSeq}::INTEGER
		<choose>
				<when test='"DD".equals(searchTrmCd)'>
					AND A.COLCT_DT = REPLACE(#{date},'-','')
				</when>
				<when test='"DI".equals(searchTrmCd)'>
					AND A.COLCT_DT BETWEEN REPLACE(#{strtDt},'-','') AND REPLACE(#{endDt},'-','')
				</when>
				<when test='"MM".equals(searchTrmCd) and  "MM".equals(colctCd)'>
					AND A.COLCT_YM = #{year}||#{searchMmCd}
				</when>
				<when test='"MM".equals(searchTrmCd) and  "DD".equals(colctCd)'>
					AND A.COLCT_DT LIKE #{year}||#{searchMmCd}||'%'
				</when>
				<when test='"QQ".equals(searchTrmCd) and "01".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between #{year}||'01' AND #{year}||'03'
						</when>
						<otherwise>
							AND A.COLCT_DT between #{year}||'0101' AND #{year}||'0331'
						</otherwise>
					</choose>
				</when>
				<when test='"QQ".equals(searchTrmCd) and "02".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between #{year}||'04' AND #{year}||'06'
						</when>
						<otherwise>
							AND A.COLCT_DT between #{year}||'0401' AND #{year}||'0631'
						</otherwise>
					</choose>
				</when>
				<when test='"QQ".equals(searchTrmCd) and "03".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between #{year}||'07' AND #{year}||'09'
						</when>
						<otherwise>
							AND A.COLCT_DT between #{year}||'0701' AND #{year}||'0931'
						</otherwise>
					</choose>
				</when>
				<when test='"QQ".equals(searchTrmCd) and "04".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between #{year}||'10' AND #{year}||'12'
						</when>
						<otherwise>
							AND A.COLCT_DT between #{year}||'1001' AND #{year}||'1231'
						</otherwise>
					</choose>
				</when>
				<when test='"HH".equals(searchTrmCd) and "01".equals(searchHhCd) '>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between #{year}||'01' AND #{year}||'06'
						</when>
						<otherwise>
							AND A.COLCT_DT between #{year}||'0101' AND #{year}||'0631'
						</otherwise>
					</choose>
				</when>
				<when test='"HH".equals(searchTrmCd) and "02".equals(searchHhCd) '>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between #{year}||'07' AND #{year}||'12'
						</when>
						<otherwise>
							AND A.COLCT_DT between #{year}||'0701' AND #{year}||'1231'
						</otherwise>
					</choose>
				</when>
				<when test='"YY".equals(searchTrmCd)  '>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between #{year}||'01' AND #{year}||'12'
						</when>
						<otherwise>
							AND A.COLCT_DT between #{year}||'0101' AND #{year}||'1231'
						</otherwise>
					</choose>
				</when>
			</choose>


		ORDER BY 1
	</select>


	<select id="selectAxServiceTimeResUseRtPivot" resultType="java.util.Map">
		/*ncis.sql.dsb.stts.res.AxServiceResStte.selectAxServiceTimeResUseRtPivot*/
		SELECT x.dt, y.*
		   FROM
		  (
			  select
			  <choose>
				<when test='"MI".equals(colctCd)'>
					dd||' '||hh||':'||mi DT
				</when>
				<when test='"HH".equals(colctCd)'>
					dd||' '||hh DT
				</when>
				<when test='"DD".equals(colctCd)'>
					dd DT
				</when>
				<when test='"MM".equals(colctCd)'>
					dd DT
				</when>
			</choose>
			  from (
				  select
				  		<choose>
							<when test='"DD".equals(searchTrmCd)'>
				  				to_char(to_date(REPLACE('${date}','-',''),'yyyymmdd')+ (row_number() over()-1)*interval '1 day','yyyymmdd') dd
									from cm_code
								limit abs(date_part('day', age(REPLACE('${date}','-','')::date, REPLACE('${date}','-','')::date)))+1
				  			</when>
				  			<when test='"DI".equals(searchTrmCd)'>
				  				to_char(to_date(REPLACE('${strtDt}','-',''),'yyyymmdd')+ (row_number() over()-1)*interval '1 day','yyyymmdd') dd
				  					from cm_code
								limit abs(date_part('day', age(REPLACE('${strtDt}','-','')::date, REPLACE('${endDt}','-','')::date)))+1
				  			</when>
				  			<when test='"MM".equals(searchTrmCd) and  "MM".equals(colctCd)'>
				  				to_char(to_date('${year}${searchMmCd}','yyyymm')+ (row_number() over()-1)*interval '1 month','yyyymm') dd
				  					from cm_code
								limit abs(date_part('month', age('${year}${searchMmCd}01', '${year}${searchMmCd}01')))+1
				  			</when>
				  			<when test='"MM".equals(searchTrmCd) and  "DD".equals(colctCd)'>
				  				to_char(to_date('${year}${searchMmCd}01','yyyymmdd')+ (row_number() over()-1)*interval '1 day','yyyymmdd') dd
				  					from cm_code
								limit abs(date_part('day', age('${year}${searchMmCd}01', '${year}${searchMmCd}${lastDay}')))+1
				  			</when>
				  			<when test='"QQ".equals(searchTrmCd) and "01".equals(searchQqCd)'>
				  				to_char(to_date('${year}01','yyyymm')+ (row_number() over()-1)*interval '1 month','yyyymm') dd
				  					from cm_code
								limit abs(date_part('month', age('${year}0101', '${year}0301')))+1
				  			</when>
				  			<when test='"QQ".equals(searchTrmCd) and "02".equals(searchQqCd)'>
				  				to_char(to_date('${year}04','yyyymm')+ (row_number() over()-1)*interval '1 month','yyyymm') dd
				  					from cm_code
								limit abs(date_part('month', age('${year}0401', '${year}0601')))+1
				  			</when>
				  			<when test='"QQ".equals(searchTrmCd) and "03".equals(searchQqCd)'>
				  				to_char(to_date('${year}07','yyyymm')+ (row_number() over()-1)*interval '1 month','yyyymm') dd
				  					from cm_code
								limit abs(date_part('month', age('${year}0701', '${year}0901')))+1
				  			</when>
				  			<when test='"QQ".equals(searchTrmCd) and "04".equals(searchQqCd)'>
				  				to_char(to_date('${year}10','yyyymm')+ (row_number() over()-1)*interval '1 month','yyyymm') dd
				  					from cm_code
								limit abs(date_part('month', age('${year}1001', '${year}1201')))+1
				  			</when>
				  			<when test='"HH".equals(searchTrmCd) and "01".equals(searchHhCd) '>
				  				to_char(to_date('${year}01','yyyymm')+ (row_number() over()-1)*interval '1 month','yyyymm') dd
				  					from cm_code
								limit abs(date_part('month', age('${year}0101', '${year}0601')))+1
				  			</when>
				  			<when test='"HH".equals(searchTrmCd) and "02".equals(searchHhCd) '>
				  				to_char(to_date('${year}07','yyyymm')+ (row_number() over()-1)*interval '1 month','yyyymm') dd
				  					from cm_code
								limit abs(date_part('month', age('${year}0701', '${year}1201')))+1
				  			</when>
				  			<when test='"YY".equals(searchTrmCd)  '>
				  				to_char(to_date('${year}01','yyyymm')+ (row_number() over()-1)*interval '1 month','yyyymm') dd
				  					from cm_code
								limit abs(date_part('month', age('${year}0101', '${year}1201')))+1
				  			</when>
				  		</choose>

				) dd_t
					<if test='"HH".equals(colctCd) or "MI".equals(colctCd)'>
						,(
						  select to_char(row_number() over() -1, 'fm00') hh
						  from cm_code
						  limit 24
						) hh_t
					</if>
					<if test='"MI".equals(colctCd)'>
						,(
		                 select distinct mi
		                  from
							  (select to_char((to_char(row_number() over() -11, 'fm00')::integer/10+1)*10 ,'fm00') as  mi
								from cm_code
							    limit 51
							  ) a
						) mi_t
			        </if>
		        order by 1
		  ) x
		  left join
		  (
		SELECT *
		FROM CROSSTAB('

		SELECT
		<choose>
			<when test='"MI".equals(colctCd)'>
				a.COLCT_DT||'' ''||a.COLCT_HOUR||'':''||a.COLCT_MI DT,
			</when>
			<when test='"HH".equals(colctCd)'>
				a.COLCT_DT||'' ''||a.COLCT_HOUR DT,
			</when>
			<when test='"DD".equals(colctCd)'>
				a.COLCT_DT DT,
			</when>
			<when test='"MM".equals(colctCd)'>
				a.COLCT_YM DT,
			</when>
		</choose>
				A.POD_ID,
			<choose>
				<when test='"CPU".equals(column)'>
					A.AVG_CPU_USE_RT
				</when>
				<when test='"MEM".equals(column)'>
					A.AVG_MEM_USE_RT
				</when>
				<when test='"NETIN".equals(column)'>
					ROUND(A.AVG_IN_TRFIC/1024,2) AVG_IN_TRFIC
				</when>
				<when test='"NETOUT".equals(column)'>
					ROUND(A.AVG_OUT_TRFIC/1024,2) AVG_OUT_TRFIC
				</when>


			</choose>
		FROM
		<choose>
			<when test='"MI".equals(colctCd)'>
				ST_RX_POD_SUM_10MI A
			</when>
			<when test='"HH".equals(colctCd)'>
				ST_RX_POD_SUM_1HH A
			</when>
			<when test='"DD".equals(colctCd)'>
				ST_RX_POD_SUM_1DD A
			</when>
			<when test='"MM".equals(colctCd)'>
				ST_RX_POD_SUM_1MM A
			</when>
		</choose>

			LEFT JOIN RX_SERVC_POD B ON A.SERVC_SEQ = B.SERVC_SEQ AND A.POD_ID = B.POD_ID

		WHERE 1=1
		      AND A.SERVC_SEQ=''${servcSeq}''
		<choose>
				<when test='"DD".equals(searchTrmCd)'>
					AND A.COLCT_DT = REPLACE(''${date}'',''-'','''')
				</when>
				<when test='"DI".equals(searchTrmCd)'>
					AND A.COLCT_DT BETWEEN REPLACE(''${strtDt}'',''-'','''') AND REPLACE(''${endDt}'',''-'','''')
				</when>
				<when test='"MM".equals(searchTrmCd) and  "MM".equals(colctCd)'>
					AND A.COLCT_YM = ''${year}${searchMmCd}''
				</when>
				<when test='"MM".equals(searchTrmCd) and  "DD".equals(colctCd)'>
					AND A.COLCT_DT LIKE ''${year}${searchMmCd}%''
				</when>
				<when test='"QQ".equals(searchTrmCd) and "01".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}01'' AND ''${year}03''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0101'' AND ''${year}0331''
						</otherwise>
					</choose>
				</when>
				<when test='"QQ".equals(searchTrmCd) and "02".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}04'' AND ''${year}06''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0401'' AND ''${year}0631''
						</otherwise>
					</choose>
				</when>
				<when test='"QQ".equals(searchTrmCd) and "03".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}07'' AND ''${year}09''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0701'' AND ''${year}0931''
						</otherwise>
					</choose>
				</when>
				<when test='"QQ".equals(searchTrmCd) and "04".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}10'' AND ''${year}12''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}1001'' AND ''${year}1231''
						</otherwise>
					</choose>
				</when>
				<when test='"HH".equals(searchTrmCd) and "01".equals(searchHhCd) '>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}01'' AND ''${year}06''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0101'' AND ''${year}0631''
						</otherwise>
					</choose>
				</when>
				<when test='"HH".equals(searchTrmCd) and "02".equals(searchHhCd) '>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}07'' AND ''${year}12''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0701'' AND ''${year}1231''
						</otherwise>
					</choose>
				</when>
				<when test='"YY".equals(searchTrmCd)  '>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}01'' AND ''${year}12''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0101'' AND ''${year}1231''
						</otherwise>
					</choose>
				</when>
			</choose>
		ORDER BY 1,2
		',
		'
			SELECT DISTINCT A.POD_ID
			FROM
			<choose>
				<when test='"MI".equals(colctCd)'>
					ST_RX_POD_SUM_10MI A
				</when>
				<when test='"HH".equals(colctCd)'>
					ST_RX_POD_SUM_1HH A
				</when>
				<when test='"DD".equals(colctCd)'>
					ST_RX_POD_SUM_1DD A
				</when>
				<when test='"MM".equals(colctCd)'>
					ST_RX_POD_SUM_1MM A
				</when>
			</choose>
			  LEFT JOIN RX_SERVC_POD B ON A.SERVC_SEQ = B.SERVC_SEQ AND A.POD_ID=B.POD_ID

		   WHERE 1=1
		         AND A.SERVC_SEQ=''${servcSeq}''

			<choose>
				<when test='"DD".equals(searchTrmCd)'>
					AND A.COLCT_DT = REPLACE(''${date}'',''-'','''')
				</when>
				<when test='"DI".equals(searchTrmCd)'>
					AND A.COLCT_DT BETWEEN REPLACE(''${strtDt}'',''-'','''') AND REPLACE(''${endDt}'',''-'','''')
				</when>
				<when test='"MM".equals(searchTrmCd) and  "MM".equals(colctCd)'>
					AND A.COLCT_YM = ''${year}${searchMmCd}''
				</when>
				<when test='"MM".equals(searchTrmCd) and  "DD".equals(colctCd)'>
					AND A.COLCT_DT LIKE ''${year}${searchMmCd}%''
				</when>
				<when test='"QQ".equals(searchTrmCd) and "01".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}01'' AND ''${year}03''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0101'' AND ''${year}0331''
						</otherwise>
					</choose>
				</when>
				<when test='"QQ".equals(searchTrmCd) and "02".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}04'' AND ''${year}06''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0401'' AND ''${year}0631''
						</otherwise>
					</choose>
				</when>
				<when test='"QQ".equals(searchTrmCd) and "03".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}07'' AND ''${year}09''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0701'' AND ''${year}0931''
						</otherwise>
					</choose>
				</when>
				<when test='"QQ".equals(searchTrmCd) and "04".equals(searchQqCd)'>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}10'' AND ''${year}12''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}1001'' AND ''${year}1231''
						</otherwise>
					</choose>
				</when>
				<when test='"HH".equals(searchTrmCd) and "01".equals(searchHhCd) '>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}01'' AND ''${year}06''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0101'' AND ''${year}0631''
						</otherwise>
					</choose>
				</when>
				<when test='"HH".equals(searchTrmCd) and "02".equals(searchHhCd) '>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}07'' AND ''${year}12''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0701'' AND ''${year}1231''
						</otherwise>
					</choose>
				</when>
				<when test='"YY".equals(searchTrmCd)  '>
					<choose>
						<when test='"MM".equals(colctCd)'>
							AND A.COLCT_YM between ''${year}01'' AND ''${year}12''
						</when>
						<otherwise>
							AND A.COLCT_DT between ''${year}0101'' AND ''${year}1231''
						</otherwise>
					</choose>
				</when>
			</choose>
			ORDER BY 1
		'
		)
		AS
		(
			DT_VAL TEXT
			<choose>
				<when test="podList != null and !podList.isEmpty()">
					<foreach collection="podList"  item="item">
					, "${item.pod_id}" NUMERIC
					</foreach>
				</when>
				<otherwise>
					,"null" NUMERIC
				</otherwise>
			</choose>
		)
	 ) y
  	on x.dt = y.DT_VAL
  	order by x.dt
	</select>





</mapper>