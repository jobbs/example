<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ncis.sql.dsb.stts.rsrcUseStteClstr">



	<resultMap type="ncis.dsb.stts.rsrcuse.vo.RsrcUseStteClstrVo" id="resultRsrcUseStteClstrVo">
		<result property="mm" column="mm"/>
		<result property="mmQ" column="mm_q"/>
		<result property="rsrcPoolNm" column="rsrc_pool_nm"/>
		<result property="clstrSeq" column="clstr_seq"/>
		<result property="clstrNm" column="clstr_nm"/>
		<result property="pmSeq" column="pm_seq"/>
		<result property="lastCpuCorQty" column="last_cpu_cor_qty"/>
		<result property="lastMemSumCapa" column="last_mem_sum_capa"/>
		<result property="lastStrgSumCapa" column="last_strg_sum_capa"/>
		<result property="lastVSrvrQty" column="last_v_srvr_qty"/>
		<result property="lastAsgnVcorQty" column="last_asgn_vcor_qty"/>
		<result property="lastAsgnMemCapa" column="last_asgn_mem_capa"/>
		<result property="lastAsgnStrgCapa" column="vm_last_strg_sum_capa"/>
		<result property="autoLastServc"   column="auto_last_servc"/>
		<result property="autoLastCoreQty" column="auto_last_core_qty"/>
		<result property="autoLastMemCapa" column="auto_last_mem_capa"/>
		<result property="autoLastStrgCpa" column="auto_last_strg_cpa"/>
		<result property="maxCpuUseRt" column="max_cpu_use_rt"/>
		<result property="maxMemUseRt" column="max_mem_use_rt"/>
		<result property="vmMaxCpuUseRt" column="vm_max_cpu_use_rt"/>
		<result property="vmMaxMemUseRt" column="vm_max_mem_use_rt"/>
		<result property="vmMaxStrgUseRt" column="vm_max_strg_use_rt"/>
		<result property="autoMaxCpuUseRt" column="auto_max_cpu_use_rt"/>
		<result property="autoMaxMemUseRt" column="auto_max_mem_use_rt"/>
	</resultMap>


	<select id="selecRsrcUseStteClstrList" resultMap="resultRsrcUseStteClstrVo">
		/* ncis.sql.dsb.stts.rsrcUseStteClstr.selecRsrcUseStteClstrList */
		select t.mm,
		       t.mm_q,
		       t.rsrc_pool_nm,
		       sum(t.clstr_seq) clstr_seq,
		       t.clstr_nm,
		       sum(t.pm_seq) pm_seq,
		       sum(t.last_cpu_cor_qty) last_cpu_cor_qty,
		       sum(t.last_mem_sum_capa) last_mem_sum_capa,
		       sum(t.last_strg_sum_capa) last_strg_sum_capa,
		       sum(t.last_v_srvr_qty) last_v_srvr_qty,
		       sum(t.auto_last_servc) auto_last_servc,
		       sum(t.auto_last_core_qty) auto_last_core_qty,
		       sum(t.auto_last_mem_capa) auto_last_mem_capa,
		       sum(t.auto_last_strg_cpa) auto_last_strg_cpa,
		       sum(t.max_cpu_use_rt) max_cpu_use_rt,
		       sum(t.max_mem_use_rt) max_mem_use_rt,

		       round(sum(t.auto_cpu_use_rt),2) auto_max_cpu_use_rt,
		       round(sum(t.auto_mem_use_rt),2) auto_max_mem_use_rt,

		       (case when sum(last_asgn_vcor_qty) is null then 0 else sum(qq.last_asgn_vcor_qty) end) last_asgn_vcor_qty,
		       (case when sum(last_asgn_mem_capa) is null then 0 else sum(qq.last_asgn_mem_capa) end) last_asgn_mem_capa,
		       (case when sum(vm_last_strg_sum_capa) is null then 0 else sum(qq.vm_last_strg_sum_capa) end) vm_last_strg_sum_capa,
		       (case when sum(qq.max_cpu_use_rt) is null then 0.00 else round(sum(qq.max_cpu_use_rt),2) end) vm_max_cpu_use_rt,
		       (case when sum(qq.max_mem_use_rt) is null then 0.00 else round(sum(qq.max_mem_use_rt),2) end) vm_max_mem_use_rt,
		       (case when sum(qq.max_mem_use_rt) is null then 0.00 else round(sum(qq.max_strg_use_rt),2) end) vm_max_strg_use_rt
	      from
	           (select
	                   substr(a.colct_ym,1,4)||'년' mm,
				       substr(a.colct_ym,5,2)||'월' mm_q,
				       a.rsrc_pool_id,
					   (select qq.rsrc_pool_nm from rc_rsrc_pool qq where qq.rsrc_pool_id = a.rsrc_pool_id) rsrc_pool_nm,
					   count(distinct a.clstr_seq) clstr_seq,
					   <if test="dtlGubun != null and !dtlGubun.isEmpty()">
   					      <choose>
						  	<when test="dtlGubun == 'dtl' ">
                             (select qq.clstr_nm from rc_clstr qq where qq.clstr_seq = a.clstr_seq) clstr_nm,
                            </when>
                            <otherwise>
                             null clstr_nm,
                            </otherwise>
                          </choose>
                       </if>
					   count(a.pm_seq) pm_seq,
					   sum(a.last_cpu_cor_qty) last_cpu_cor_qty,
					   sum(round(a.last_mem_sum_capa/1024/1024/1024,0)) last_mem_sum_capa,
					   sum(round(a.last_strg_sum_capa/1024/1024/1024,0)) last_strg_sum_capa,
					   0 auto_last_servc,
					   0 auto_last_core_qty,
					   0 auto_last_mem_capa,
					   0 auto_last_strg_cpa,
					   sum(a.last_v_srvr_qty) last_v_srvr_qty,
					   round(avg(a.max_cpu_use_rt),2) max_cpu_use_rt,
					   round(avg(a.max_mem_use_rt),2) max_mem_use_rt,
					   0 auto_cpu_use_rt,
		 			   0 auto_mem_use_rt
                  from st_pm_colct_sum_1mm a
                 where 1=1
                 <if test="region != null and !region.isEmpty()">
			  		<foreach collection="region" open="AND a.region_id IN(" close=")" separator="," item="item">
			    		#{item}
			  		</foreach>
				 </if>
				 <if test="year != null and !year.isEmpty()">
				 	and a.colct_ym like #{year}||#{mm}||'%'
				 </if>
   				 <if test="year != null and !year.isEmpty()">
          	  	 	group by substr(a.colct_ym,1,4),
                             substr(a.colct_ym,5,2),
                             rsrc_pool_id
                             <if test="dtlGubun != null and !dtlGubun.isEmpty()">
								<if test="dtlGubun == 'dtl' ">
            						,clstr_seq
            					</if>
       						</if>
      		 	</if>
      		     union all
      		     select a.mm,
						a.mm_q,
						a.rsrc_pool_id,
						a.rsrc_pool_nm,
						b.clstr_seq,
						b.clstr_nm,
						b.pm_seq,
						b.last_cpu_cor_qty,
						b.last_mem_sum_capa,
						b.last_strg_sum_capa,
						a.auto_last_servc,
						a.auto_last_core_qty,
						a.auto_last_mem_capa,
						a.auto_last_strg_cpa,
						a.last_v_srvr_qty,
						a.max_cpu_use_rt,
						a.max_mem_use_rt,
						a.auto_cpu_use_rt,
						a.auto_mem_use_rt
					  from
		      		     	(select substr(cc.colct_ym,1,4)||'년' mm,
								   substr(cc.colct_ym,5,2)||'월' mm_q,
								   cc.rsrc_pool_id,
							       (select qq.rsrc_pool_nm from rc_rsrc_pool qq where qq.rsrc_pool_id = cc.rsrc_pool_id) rsrc_pool_nm,
								   COUNT(DISTINCT case when cc.last_pod_qty > 0 then cc.servc_seq end) as  auto_last_servc,
			      		           COALESCE(ROUND(SUM(cpu_asgn_capa)/1000,0),0) auto_last_core_qty,
					 			   COALESCE(ROUND(SUM(mem_tot_capa)/1024/1024/1024,0),0) auto_last_mem_capa,
				                   COALESCE(ROUND(SUM(strg_tot_capa)/1024/1024/1024,0),0) auto_last_strg_cpa,
			                       0 last_v_srvr_qty,
								   0 max_cpu_use_rt,
								   0 max_mem_use_rt,
								   avg(cc.max_cpu_use_rt) auto_cpu_use_rt,
								   avg(cc.max_mem_use_rt) auto_mem_use_rt
						      from
								   (select b.colct_ym,
								           c.region_id,
								           b.zone_id,
								           b.net_id,
								           b.rsrc_pool_id,
								           b.servc_seq,
										   FIRST_VALUE(b.cpu_asgn_capa) OVER (PARTITION BY b.servc_seq ORDER BY b.colct_ym DESC) cpu_asgn_capa,
										   FIRST_VALUE(b.mem_tot_capa) OVER (PARTITION BY b.servc_seq  ORDER BY b.colct_ym DESC) mem_tot_capa,
										   FIRST_VALUE(b.strg_tot_capa) OVER (PARTITION BY b.servc_seq  ORDER BY b.colct_ym DESC) strg_tot_capa,
										   b.max_cpu_use_rt,
										   b.max_mem_use_rt,
										   b.last_pod_qty
								      from st_rx_servc_sum_1mm b
								      left join rc_rsrc_pool c on b.rsrc_pool_id = c.rsrc_pool_id
								     where 1=1
								     <if test="region != null and !region.isEmpty()">
								  		<foreach collection="region" open="and c.region_id IN(" close=")" separator="," item="item">
								    		#{item}
								  		</foreach>
									 </if>
									 <if test="year != null and !year.isEmpty()">
									 	and b.colct_ym like #{year}||#{mm}||'%'
									 </if>
			                  		) cc
			                 where 1=1
				             group by substr(cc.colct_ym,1,4),
				            		  substr(cc.colct_ym,5,2),
				                      rsrc_pool_id
		                     )a left join
				      		 (select substr(cc.colct_ym,1,4)||'년' mm,
									   substr(cc.colct_ym,5,2)||'월' mm_q,
									   cc.rsrc_pool_id,
								       (select qq.rsrc_pool_nm from rc_rsrc_pool qq where qq.rsrc_pool_id = cc.rsrc_pool_id) rsrc_pool_nm,
									   1 clstr_seq,
									   null::text clstr_nm,
								       count(cc.atmscl_node_id) pm_seq,
									   COALESCE(ROUND(SUM(cc.cpu_cor_qty),0),0) last_cpu_cor_qty,
									   COALESCE(ROUND(SUM(cc.mem_tot_capa)/1024/1024/1024,0),0) last_mem_sum_capa,
									   COALESCE(ROUND(SUM(cc.strg_tot_capa)/1024/1024/1024,0),0) last_strg_sum_capa
							      from
									   (select b.colct_ym,
									           c.region_id,
									           b.zone_id,
									           b.net_id,
									           b.rsrc_pool_id,
									           b.atmscl_node_id,
											   b.cpu_cor_qty,
											   b.mem_tot_capa,
											   b.strg_tot_capa

									      from st_rx_node_sum_1mm b
									      left join rc_rsrc_pool c on b.rsrc_pool_id = c.rsrc_pool_id
									     where 1=1
									     <if test="region != null and !region.isEmpty()">
									  		<foreach collection="region" open="and c.region_id IN(" close=")" separator="," item="item">
									    		#{item}
									  		</foreach>
										 </if>
										 <if test="year != null and !year.isEmpty()">
										 	and b.colct_ym like #{year}||#{mm}||'%'
										 </if>
				                  		) cc
				                 where 1=1
					             group by substr(cc.colct_ym,1,4),
					            		  substr(cc.colct_ym,5,2),
					                      rsrc_pool_id
					          )b on a.mm = b.mm and a.mm_q = b.mm_q and a.rsrc_pool_id = b.rsrc_pool_id
                 ) t
          left join
                    (select
                            substr(a.colct_ym,1,4)||'년' mm,
         					substr(a.colct_ym,5,2)||'월' mm_q,
   							a.rsrc_pool_id,
   							<if test="dtlGubun != null and !dtlGubun.isEmpty()">
		      					<if test="dtlGubun == 'dtl' ">
                       				(select qq.clstr_nm from rc_clstr qq where qq.clstr_seq = a.clstr_seq) clstr_nm,
                    			</if>
                 			</if>
   							avg(a.max_cpu_use_rt) max_cpu_use_rt,
            				avg(a.max_mem_use_rt) max_mem_use_rt,
         					avg(a.max_strg_use_rt) max_strg_use_rt,
         					sum(a.last_vcore_qty) last_asgn_vcor_qty,
							sum(round(a.last_mem_sum_capa/1024/1024/1024,0)) last_asgn_mem_capa,
							sum(round(a.last_strg_sum_capa/1024/1024/1024,0)) vm_last_strg_sum_capa
  					   from st_vm_colct_sum_1mm a
					  where 1=1
     				  <if test="region != null and !region.isEmpty()">
                      	<foreach collection="region" open="AND a.region_id IN(" close=")" separator="," item="item">
      						#{item}
    					</foreach>
    				  </if>

				      <if test="year != null and !year.isEmpty()">
				          and a.colct_ym like #{year}||#{mm}||'%'
				      </if>

 					  <if test="year != null and !year.isEmpty()">
          				  group by substr(a.colct_ym,1,4),
                      			   substr(a.colct_ym,5,2),
                                   a.rsrc_pool_id
	                      <if test="dtlGubun != null and !dtlGubun.isEmpty()">
		 					  <if test="dtlGubun == 'dtl' ">
		              			 ,clstr_seq
		              		  </if>
	         			  </if>
          			  </if>

   					) qq on t.mm = qq.mm and t. mm_q = qq.mm_q and t.rsrc_pool_id = qq.rsrc_pool_id
               		<if test="dtlGubun != null and !dtlGubun.isEmpty()">
						<if test="dtlGubun == 'dtl' ">
					           and t.clstr_nm = qq.clstr_nm
					    </if>
					</if>
		 group by t.mm, t.mm_q, t.rsrc_pool_nm, t.clstr_nm
	</select>
</mapper>